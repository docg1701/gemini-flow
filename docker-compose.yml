services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend_app
      # args: # COMENTADO PARA TESTE
      #   PYTHON_VERSION: ${DOCKER_PYTHON_VERSION}
      #   APP_USER: ${BACKEND_APP_USER}
      #   APP_GROUP: ${BACKEND_APP_GROUP}
    ports:
      - "${BACKEND_HOST_PORT}:${BACKEND_CONTAINER_PORT}"
    # environment:
    #   - POETRY_NO_VIRTUALENVS=1 # Removido para testar efeito do 'poetry env use system'
    # env_file: # COMENTADO PARA TESTE
    #   - ./.env
    volumes:
      - ./backend:/app
    command: poetry run uvicorn main:app --host 0.0.0.0 --port ${BACKEND_CONTAINER_PORT} --reload --reload-dir /app
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_CONTAINER_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
      args:
        NODE_VERSION: ${DOCKER_NODE_VERSION}
        NGINX_VERSION: ${DOCKER_NGINX_VERSION}
    ports:
      - "${FRONTEND_HOST_PORT}:${NGINX_CONTAINER_PORT}"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${NGINX_CONTAINER_PORT}/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  app-network:
    driver: bridge
